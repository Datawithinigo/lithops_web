---
import Layout from '../layouts/Layout.astro';
import { FileUploader } from '../components/FileUploader';
import { DataTable } from '../components/DataTable';
import { DataFilters } from '../components/DataFilters';
import { DataVisualizer } from '../components/DataVisualizer';
import type { EnergyData } from '../types';

// Initialize shared data structure
const initialData = [] as EnergyData[];
---

<Layout title="Green Computing Analysis">
  <div class="container">
    <h1>Green Computing Analysis</h1>
    <p>Upload your data to analyze energy consumption patterns.</p>
    
    <div class="grid gap-6">
      <div class="bg-white rounded-lg shadow p-6">
        <h2>Upload Data</h2>
        <FileUploader client:load onDataLoaded={(data: EnergyData[]) => {
          window.dispatchEvent(new CustomEvent('data-loaded', { detail: data }));
        }} />
      </div>
      
      <div class="bg-white rounded-lg shadow p-6">
        <h2>Data Filters</h2>
        <DataFilters 
          client:load
          data={initialData}
          onFilterChange={(filters) => {
            window.dispatchEvent(new CustomEvent('filter-change', { detail: filters }));
          }}
        />
      </div>
      
      <div class="bg-white rounded-lg shadow p-6">
        <h2>Data Table</h2>
        <DataTable client:load />
      </div>
      
      <div class="bg-white rounded-lg shadow p-6">
        <h2>Visualizations</h2>
        <DataVisualizer client:load chartType="line" />
      </div>
    </div>
  </div>
</Layout>

<script define:vars={{ initialData }}>
  let currentData = initialData;

  window.addEventListener('data-loaded', (event) => {
    currentData = event.detail;
    window.dispatchEvent(new CustomEvent('update-data', { detail: currentData }));
  });
</script>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  h1 {
    color: #2ecc71;
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  h2 {
    color: #333;
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  p {
    color: #666;
    margin-bottom: 2rem;
  }

  .grid {
    display: grid;
    gap: 2rem;
  }
</style>
